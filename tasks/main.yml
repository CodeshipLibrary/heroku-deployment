---
- name: Install Heroku apt key
  ansible.builtin.apt_key:
    url: https://cli-assets.heroku.com/apt/release.key
    state: present

- name: Install Heroku apt repository
  ansible.builtin.apt_repository:
    repo: deb https://cli-assets.heroku.com/branches/stable/apt ./
    state: present

- name: Install Heroku package
  ansible.builtin.apt:
    package: heroku
    state: present

- name: Create Heroku directory
  ansible.builtin.file:
    dest: "{{ heroku_home }}/.heroku"
    state: directory
  become: true
  become_user: "{{ heroku_user }}"

- name: Get installed Heroku plugins
  ansible.builtin.command: heroku plugins
  register: heroku_plugins
  become: true
  become_user: "{{ heroku_user }}"

- name: Install builds plugin
  ansible.builtin.command: heroku plugins:install @heroku-cli/heroku-builds
  become: true
  become_user: "{{ heroku_user }}"
  when: heroku_plugins.stdout is not search("heroku-builds")

- name: Put scripts into place
  ansible.posix.synchronize:
    src: "{{ role_path }}/deployment/scripts/"
    dest: "{{ heroku_home }}/bin/"
    use_ssh_args: true
    owner: false
    group: false
  become: true
  become_user: "{{ heroku_user }}"

- name: Fix file permissions
  ansible.builtin.file:
    dest: "{{ heroku_home }}/bin/"
    owner: "{{ heroku_user }}"
    recurse: true

- name: Link scripts into "legacy" places
  ansible.builtin.file:
    src: "{{ heroku_home }}/bin/{{ item.src }}"
    dest: "{{ heroku_home }}/bin/{{ item.dest }}"
    state: link
  become: true
  become_user: "{{ heroku_user }}"
  with_items:
    - { src: codeship_heroku_run, dest: heroku_run }
    - { src: codeship_heroku_check_access, dest: check_access_to_heroku_app }
