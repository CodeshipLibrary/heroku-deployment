- name: Turn /app folder into git repository for tests
  service: heroku-on-ansible
  command: bash -c 'cd /app && git config --global user.email "you@example.com" && git config --global user.name "Your Name" && git init && git add . && git commit -m "foo"'
- name: Deployment Test via Ansible Container
  service: heroku-on-ansible
  command: codeship_heroku_deploy -f /app -N codeship-heroku-test-app
- name: Deployment Test via Ansible Container with extra command
  service: heroku-on-ansible
  command: codeship_heroku_deploy -f /app -N codeship-heroku-test-app -d 'echo "foo"'
- name: Deployment Test via Ansible Container with URL check
  service: heroku-on-ansible
  command: codeship_heroku_deploy -f /app -N codeship-heroku-test-app -c -u https://codeship-heroku-test-app-9616a0a62535.herokuapp.com/
- name: Deployment Test via Ansible Container with a failing URL check
  service: heroku-on-ansible
  command: bash -c "! codeship_heroku_deploy -f /app -N codeship-heroku-test-app -c -u http://foo.bar.baz"
- name: Deployment via Ansible Container with changes in repository being reset
  service: heroku-on-ansible
  command: bash -c "echo 'foo' > /app/web.rb && codeship_heroku_deploy -f /app -N codeship-heroku-test-app -C -c -u https://codeship-heroku-test-app-9616a0a62535.herokuapp.com/"
- name: Negative check for previous test - url check should not succeed if web.rb contains no ruby and repository cleanup is not configured
  service: heroku-on-ansible
  command: bash -c "echo 'foo' > /app/web.rb && ! codeship_heroku_deploy -f /app -N codeship-heroku-test-app -c -u https://codeship-heroku-test-app-9616a0a62535.herokuapp.com/"
- name: Make sure that files are executable in "legacy paths"
  service: heroku-on-ansible
  command: bash -c 'test -x "$(which check_access_to_heroku_app)" && test -x "$(which heroku_run)"'
- name: Deployment Test via plain container
  service: heroku
  command: codeship_heroku_deploy -f /app -N codeship-heroku-test-app
- name: Deployment Test via plain container with old entry point/command
  service: heroku
  command: codeship_heroku deploy /app codeship-heroku-test-app
- name: Heroku Run Test
  service: heroku
  command: heroku run --exit-code --app codeship-heroku-test-app -- true
- name: Test dockercfg Generator
  type: serial
  steps:
    - name: Build
      service: dockercfg-generator
      command: true
    - name: Test Push
      service: dockercfg-test
      type: push
      image_name: registry.heroku.com/codeship-heroku-test-container/web
      registry: registry.heroku.com
      dockercfg_service: dockercfg-generator
- name: Deploy (to Docker Hub)
  type: serial
  steps:
    - name: Push Deployment
      service: heroku
      tag: master
      type: push
      image_name: codeship/heroku-deployment
      encrypted_dockercfg_path: dockercfg.encrypted
    - name: Push dockercfg Generator
      service: dockercfg-generator
      tag: master
      type: push
      image_name: codeship/heroku-dockercfg-generator
      encrypted_dockercfg_path: dockercfg.encrypted
